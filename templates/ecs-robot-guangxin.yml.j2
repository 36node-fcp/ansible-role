#jinja2: lstrip_blocks: "True", trim_blocks: "True"
---
apiVersion: v1
kind: Service
metadata:
  name: ecs-robot-guangxin
  labels:
    app: ecs-robot-guangxin
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: ecs-robot-guangxin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecs-robot-guangxin
  labels:
    app: ecs-robot-guangxin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ecs-robot-guangxin
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ecs-robot-guangxin
        name: ecs-robot-guangxin
        vector.dev/enable: "{{ ecs_robot_guangxin_vector_enabled }}"
        {% if ecs_robot_guangxin_vector_topic %}
        vector.dev/topic: "{{ ecs_robot_guangxin_vector_topic }}"
        {% endif %}
    spec:
      restartPolicy: Always
      containers:
        - name: ecs-robot-guangxin
          image: "{{ ecs_robot_guangxin_image }}"
          imagePullPolicy: "{{ image_pull_policy }}"
          env:
            - name: DEPLOY_TIME
              value: "{{ ecs_robot_guangxin_time }}"
            - name: PORT
              value: "{{ ecs_robot_guangxin_port }}"
            - name: LOG_LEVEL
              value: "{{ ecs_robot_guangxin_log_level }}"
            - name: URL_PREFIX
              value: "{{ ecs_robot_guangxin_path }}"
            - name: MONGODB_CONNECTION
              value: "{{ ecs_robot_guangxin_mongodb_connection }}"
            - name: MQTT_URL
              value: "{{ ecs_robot_guangxin_mqtt_url }}"
            - name: MQTT_TOPIC_ILLEGAL_RECORD
              value: "{{ mqtt_topic_illegal_record }}"
            - name: GUANGXIN_PLATFORM_ENDPOINT
              value: "{{ ecs_robot_guangxin_ep }}"
            - name: FETCH_DELAY
              value: "{{ ecs_robot_guangxin_fetch_delay }}"
            - name: FETCH_WINDOW
              value: "{{ ecs_robot_guangxin_fetch_window }}"
          ports:
            - name: http
              containerPort: 80
          resources:
            limits:
              cpu: "1000m"
              memory: "1Gi"
            requests:
              cpu: "10m"
              memory: "32Mi"
